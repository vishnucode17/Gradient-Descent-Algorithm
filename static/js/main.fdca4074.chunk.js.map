{"version":3,"sources":["logo.svg","Header.js","Graph.js","Content.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","Graph","props","className","LineChart","width","height","data","Line","type","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Content","useState","setData","label","setLabel","l_rate","setL_rate","n_iter","setN_iter","data_array","split","label_array","data_object","i","length","data_value","parseFloat","push","costArray","initialize","count","weights","bias","cost","epoch","learning_rate","j","output","value","error","cost_object","gradient_descent","placeholder","onChange","e","target","toFixed","min","max","step","Footer","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdca4074.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './App.css';\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <h1 id=\"head\">Gradient Descent Algorithm</h1>\r\n                    \r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\r\nimport './content.css';\r\nconst Graph = (props) => {\r\n    //const data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400}, {name: 'Page B', uv: 300, pv: 2400, amt: 2400}, {name: 'Page C', uv: 300, pv: 2400, amt: 2400}, {name: 'Page D', uv: 400, pv: 2400, amt: 2400}, {name: 'Page E', uv: 200, pv: 2400, amt: 2400}, {name: 'Page F', uv: 400, pv: 2400, amt: 2400}, {name: 'Page G', uv: 500, pv: 2400, amt: 2400}];\r\n    return (\r\n        <div className=\"graph\">\r\n            <LineChart width={500} height={400} data={props.data}>\r\n                <Line type=\"monotone\" dataKey=\"error\" stroke=\"#8884d8\" />\r\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                <XAxis dataKey=\"count\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n            </LineChart>\r\n        </div>\r\n    )\r\n}\r\nexport default Graph;","import React, { useEffect, useState } from 'react';\r\nimport Graph from './Graph';\r\nimport './content.css';\r\nconst Content = () => {\r\n    const [data, setData] = useState(\"\");\r\n    const [label, setLabel] = useState(\"\");\r\n    var [l_rate, setL_rate] = useState(0.001);\r\n    var [n_iter, setN_iter] = useState(1000);\r\n    var data_array = data.split(',');\r\n    var label_array = label.split(',');\r\n    var data_object = [];\r\n    for (let i = 0; i < data_array.length; i++) {\r\n        let data_value = {}\r\n        data_value[\"value\"] = parseFloat(data_array[i]);\r\n        data_object.push(data_value);\r\n    }\r\n    for (let i = 0; i < label_array.length; i++) {\r\n        label_array[i] = parseFloat(label_array[i]);\r\n    }\r\n    var costArray = [];\r\n    var initialize = function () {\r\n        var count = 1;\r\n        var weights = 0.01;\r\n        var bias = 0;\r\n        var cost = 0;\r\n        var epoch = n_iter;\r\n        var learning_rate = l_rate;\r\n        var gradient_descent = function (data, label, weights, bias, cost, epoch, learning_rate) {\r\n            for (let i = 0; i < epoch; i++) {\r\n                for (let j = 0; j < data.length; j++) {\r\n                    let output = weights * data[j].value + bias;\r\n                    var error = label[j] - output;\r\n                    weights = weights + learning_rate * error * data[j].value;\r\n                    bias = bias + learning_rate * error;\r\n                    cost = cost + (error * error) / 2;\r\n                }\r\n                \r\n                    let cost_object = {};\r\n                    cost_object[\"error\"] = error;\r\n                    cost_object[\"count\"] = count;\r\n                    count++;\r\n                    costArray.push(cost_object);\r\n                \r\n            }\r\n            return [weights, bias, cost, epoch, learning_rate];\r\n\r\n        }\r\n        return gradient_descent(data_object, label_array, weights, bias, cost, epoch, learning_rate);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"data\">\r\n                <div className=\"input_data\">\r\n                    <input type=\"text\" value={data} placeholder=\"Enter data separted by comma\" onChange={e => setData(e.target.value)} />\r\n                </div>\r\n                <div className=\"label_data\">\r\n                    <input type=\"text\" value={label} placeholder=\"Enter labels separted by comma\" onChange={e => setLabel(e.target.value)} />\r\n                </div>\r\n                <div className=\"result\">\r\n                    <p>Weight: {initialize()[0].toFixed(2)}</p>\r\n                    <p>Bias: {initialize()[1].toFixed(2)}</p>\r\n                </div>\r\n                {/* Slider input */}\r\n                <div className=\"slider\">\r\n                    <p>Learning Rate: </p>\r\n                    <input type=\"range\" min=\"0.000001\" max=\"0.01\" step=\"0.0001\" value={l_rate} onChange={e => setL_rate(e.target.value)} />\r\n                </div>\r\n                <div className=\"slider\">\r\n                    <p>Number of iterations: </p>\r\n                    <input type=\"range\" min=\"1000\" max=\"10000\" step=\"1000\" value={n_iter} onChange={e => setN_iter(e.target.value)} />\r\n                </div>\r\n\r\n                \r\n            </div>\r\n            <Graph data={costArray} />\r\n        </div>\r\n    )\r\n};\r\nexport default Content;","import React from 'react';\r\nimport './content.css';\r\nconst Footer=()=>{\r\n    return (\r\n        <> \r\n            <div className=\"footer\">\r\n                <p>Project by <span><em>G Vishnu Vardhan Reddy</em></span></p>\r\n                <a href=\"https://github.com/vishnucode17/Gradient-Descent-Algorithm\">Click here for Source code</a>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\nexport default Footer;","import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header';\nimport Content from './Content';\nimport Footer from './Footer';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Content />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}